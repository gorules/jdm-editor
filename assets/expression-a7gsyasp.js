import{j as r}from"./wrapNativeSuper-CEh6UYuW.js";import{a as B,b as O,p as m,d as v,u as P,f as L,D as z,g as $,h as H,C as K,R as U,H as W,i as F}from"./confirm-action-CQ04zjDJ.js";import{R as k,r as l}from"./index-CTjT7uj6.js";import{T as x,i as R,d as G}from"./wasm-DSB3Eh-p.js";import{c as j}from"./ce-CGifztA2.js";import{B as J}from"./button-DEUXPxaj.js";/**
 * @license lucide-react v0.487.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const Q=[["circle",{cx:"9",cy:"12",r:"1",key:"1vctgf"}],["circle",{cx:"9",cy:"5",r:"1",key:"hp0tcf"}],["circle",{cx:"9",cy:"19",r:"1",key:"fkjjf6"}],["circle",{cx:"15",cy:"12",r:"1",key:"1tmaij"}],["circle",{cx:"15",cy:"5",r:"1",key:"19l28e"}],["circle",{cx:"15",cy:"19",r:"1",key:"f4zoj3"}]],X=B("grip-vertical",Q),w=k.createContext({}),q=(e={})=>({id:crypto.randomUUID(),key:"",value:"",...e}),_=({children:e})=>{const a=l.useMemo(()=>O(i=>({configurable:!0,disabled:!1,addRowAbove:(s=0)=>{i(m(n=>(n.expressions.splice(s,0,q()),n)))},addRowBelow:s=>{i(m(n=>(s=s??n.expressions.length-1,n.expressions.splice(s+1,0,q()),n)))},expressions:[],setExpressions:s=>{i({expressions:s})},swapRows:(s,n)=>{i(m(u=>{const[d]=u.expressions.splice(s,1);return u.expressions.splice(n,0,d),u}))},removeRow:s=>{i(m(n=>(n.expressions.splice(s,1),n)))},updateRow:(s,n)=>{i(m(u=>(u.expressions[s]={...u.expressions[s],...n},u)))}})),[]);return r.jsx(w.Provider,{value:a,children:e})};function g(e,a=v){return k.useContext(w)(e,a)}const h=()=>k.useContext(w);_.__docgenInfo={description:"",methods:[],displayName:"ExpressionStoreProvider"};const Y=({value:e,onChange:a,defaultValue:i=[],configurable:s=!0,disabled:n=!1})=>{const u=l.useRef(!1),d=h(),{setExpressions:t,expressions:o}=g(({setExpressions:p,expressions:f})=>({setExpressions:p,expressions:f}));return l.useEffect(()=>{d.setState({configurable:s,disabled:n})},[s,n]),l.useEffect(()=>{if(a)return d.subscribe((p,f)=>{v(p.expressions,f.expressions)||a?.(p.expressions)})},[d,a]),l.useEffect(()=>{u.current&&e&&!v(e,o)&&t(e)},[e]),l.useEffect(()=>{e?t(e):i&&t(i),u.current=!0},[]),null},E=({expression:e,index:a,variableType:i})=>{const s=l.useRef(null),{updateRow:n,removeRow:u,swapRows:d,disabled:t,configurable:o}=g(({updateRow:c,removeRow:S,swapRows:C,disabled:N,configurable:A})=>({updateRow:c,removeRow:S,swapRows:C,disabled:N,configurable:A})),p=c=>{n(a,c)},f=()=>{u(a)},[{isDropping:y,direction:b},T]=P({accept:"row",collect:c=>({isDropping:c.isOver({shallow:!0}),direction:(c.getDifferenceFromInitialOffset()?.y||0)>0?"down":"up"}),drop:c=>{d(c.index,a)}}),[{isDragging:I},M,V]=L({canDrag:o&&!t,item:()=>({...e,index:a}),type:"row",collect:c=>({isDragging:c.isDragging()})});return V(T(s)),r.jsxs("div",{ref:s,className:j("expression-list-item","expression-list__item",y&&b==="down"&&"dropping-down",y&&b==="up"&&"dropping-up",e?._diff?.status&&`expression-list__item--${e?._diff?.status}`),style:{opacity:I?.5:1},children:[r.jsx("div",{ref:M,className:"expression-list-item__drag","aria-disabled":!o||t,children:e?._diff?.status?r.jsx(z,{status:e?._diff?.status,style:{fontSize:16}}):r.jsx(X,{size:14})}),r.jsx("div",{children:r.jsx($,{placeholder:"Key",readOnly:!o||t,displayDiff:e?._diff?.fields?.key?.status==="modified",previousValue:e?._diff?.fields?.key?.previousValue,value:e?.key,onChange:c=>p({key:c.target.value}),autoComplete:"off"})}),r.jsxs("div",{className:"expression-list-item__code",children:[r.jsx(H,{placeholder:"Expression",maxRows:9,disabled:t,value:e?.value,displayDiff:e?._diff?.fields?.value?.status==="modified",previousValue:e?._diff?.fields?.value?.previousValue,onChange:c=>p({value:c}),variableType:i}),r.jsx(Z,{expression:e})]}),r.jsx("div",{children:r.jsx(K,{iconOnly:!0,disabled:!o||t,onConfirm:f})})]})},Z=({expression:e})=>{const{trace:a}=g(({traceData:i})=>({trace:i?.[e.key]?.result}));return a?r.jsx("div",{className:"expression-list-item__resultOverlay",children:r.jsxs(x.Text,{ellipsis:{tooltip:a},style:{maxWidth:120},children:["= ",a]})}):null};E.__docgenInfo={description:"",methods:[],displayName:"ExpressionItem",props:{expression:{required:!0,tsType:{name:"signature",type:"object",raw:`{
  id: string;
  key: string;
  value: string;
  _diff?: DiffMetadata;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"key",value:{name:"string",required:!0}},{key:"value",value:{name:"string",required:!0}},{key:"_diff",value:{name:"signature",type:"object",raw:`{
  status?: DiffStatus;
  previousValue?: T;
  previousIndex?: number;
  currentIndex?: number;
  fields?: Record<string, DiffMetadata>;
}`,signature:{properties:[{key:"status",value:{name:"union",raw:"'added' | 'removed' | 'modified' | 'unchanged' | 'moved'",elements:[{name:"literal",value:"'added'"},{name:"literal",value:"'removed'"},{name:"literal",value:"'modified'"},{name:"literal",value:"'unchanged'"},{name:"literal",value:"'moved'"}],required:!1}},{key:"previousValue",value:{name:"T",required:!1}},{key:"previousIndex",value:{name:"number",required:!1}},{key:"currentIndex",value:{name:"number",required:!1}},{key:"fields",value:{name:"Record",elements:[{name:"string"},{name:"DiffMetadata"}],raw:"Record<string, DiffMetadata>",required:!1}}]},required:!1}}]}},description:""},index:{required:!0,tsType:{name:"number"},description:""},variableType:{required:!1,tsType:{name:"VariableType"},description:""}}};const D=({})=>{const{expressions:e,addRowBelow:a,configurable:i,disabled:s,inputVariableType:n}=g(({expressions:t,addRowBelow:o,configurable:p,disabled:f,inputVariableType:y})=>({expressions:t,addRowBelow:o,configurable:p,disabled:f,inputVariableType:y}),v),[u,d]=l.useState();return l.useEffect(()=>{if(!R()||!n)return;const t=n.clone();e.filter(o=>o.key.length>0).forEach(o=>{const p=t.calculateType(o.value);t.set(`$.${o.key}`,p)}),d(t)},[e,n]),r.jsxs("div",{className:"expression-list",children:[r.jsxs("div",{className:j("expression-list__item","expression-list__item--heading"),children:[r.jsx("div",{}),r.jsx(x.Text,{type:"secondary",children:"Key"}),r.jsx(x.Text,{type:"secondary",children:"Expression"}),r.jsx("div",{})]}),(e||[]).map((t,o)=>r.jsx(E,{expression:t,index:o,variableType:u},t.id)),i&&!s&&r.jsx("div",{className:"expression-list__button-wrapper",children:r.jsx(J,{className:"expression-list__button",icon:r.jsx(U,{}),type:"link",onClick:()=>a(),children:"Add row"})})]})};D.__docgenInfo={description:"",methods:[],displayName:"ExpressionList"};const ee=({manager:e,traceData:a,inputData:i,...s})=>{const[n,u]=l.useState(!1),d=l.useRef(null);l.useEffect(()=>{u(!0)},[]);const t=l.useMemo(()=>e?{manager:e}:{backend:W,options:{rootElement:d.current}},[d.current,e]);return r.jsx("div",{ref:d,children:d.current&&r.jsx(F,{...t,children:r.jsxs(_,{children:[r.jsx(Y,{...s}),r.jsx(D,{}),r.jsx(re,{traceData:a,inputData:i})]})})})},re=({traceData:e,inputData:a})=>{const i=h();return l.useEffect(()=>{const s=i.getState();v(s,e)||i.setState({traceData:e})},[e]),l.useEffect(()=>{R()&&i.setState({inputVariableType:G(a)})},[a]),null};ee.__docgenInfo={description:"",methods:[],displayName:"Expression",props:{manager:{required:!1,tsType:{name:"DragDropManager"},description:""},traceData:{required:!1,tsType:{name:"Record",elements:[{name:"string"},{name:"signature",type:"object",raw:"{ result: unknown }",signature:{properties:[{key:"result",value:{name:"unknown",required:!0}}]}}],raw:"Record<string, { result: unknown }>"},description:""},inputData:{required:!1,tsType:{name:"unknown"},description:""},configurable:{required:!1,tsType:{name:"boolean"},description:""},disabled:{required:!1,tsType:{name:"boolean"},description:""},defaultValue:{required:!1,tsType:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  id: string;
  key: string;
  value: string;
  _diff?: DiffMetadata;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"key",value:{name:"string",required:!0}},{key:"value",value:{name:"string",required:!0}},{key:"_diff",value:{name:"signature",type:"object",raw:`{
  status?: DiffStatus;
  previousValue?: T;
  previousIndex?: number;
  currentIndex?: number;
  fields?: Record<string, DiffMetadata>;
}`,signature:{properties:[{key:"status",value:{name:"union",raw:"'added' | 'removed' | 'modified' | 'unchanged' | 'moved'",elements:[{name:"literal",value:"'added'"},{name:"literal",value:"'removed'"},{name:"literal",value:"'modified'"},{name:"literal",value:"'unchanged'"},{name:"literal",value:"'moved'"}],required:!1}},{key:"previousValue",value:{name:"T",required:!1}},{key:"previousIndex",value:{name:"number",required:!1}},{key:"currentIndex",value:{name:"number",required:!1}},{key:"fields",value:{name:"Record",elements:[{name:"string"},{name:"DiffMetadata"}],raw:"Record<string, DiffMetadata>",required:!1}}]},required:!1}}]}}],raw:"ExpressionEntry[]"},description:""},value:{required:!1,tsType:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  id: string;
  key: string;
  value: string;
  _diff?: DiffMetadata;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"key",value:{name:"string",required:!0}},{key:"value",value:{name:"string",required:!0}},{key:"_diff",value:{name:"signature",type:"object",raw:`{
  status?: DiffStatus;
  previousValue?: T;
  previousIndex?: number;
  currentIndex?: number;
  fields?: Record<string, DiffMetadata>;
}`,signature:{properties:[{key:"status",value:{name:"union",raw:"'added' | 'removed' | 'modified' | 'unchanged' | 'moved'",elements:[{name:"literal",value:"'added'"},{name:"literal",value:"'removed'"},{name:"literal",value:"'modified'"},{name:"literal",value:"'unchanged'"},{name:"literal",value:"'moved'"}],required:!1}},{key:"previousValue",value:{name:"T",required:!1}},{key:"previousIndex",value:{name:"number",required:!1}},{key:"currentIndex",value:{name:"number",required:!1}},{key:"fields",value:{name:"Record",elements:[{name:"string"},{name:"DiffMetadata"}],raw:"Record<string, DiffMetadata>",required:!1}}]},required:!1}}]}}],raw:"ExpressionEntry[]"},description:""},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(value: ExpressionEntry[]) => void",signature:{arguments:[{type:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  id: string;
  key: string;
  value: string;
  _diff?: DiffMetadata;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"key",value:{name:"string",required:!0}},{key:"value",value:{name:"string",required:!0}},{key:"_diff",value:{name:"signature",type:"object",raw:`{
  status?: DiffStatus;
  previousValue?: T;
  previousIndex?: number;
  currentIndex?: number;
  fields?: Record<string, DiffMetadata>;
}`,signature:{properties:[{key:"status",value:{name:"union",raw:"'added' | 'removed' | 'modified' | 'unchanged' | 'moved'",elements:[{name:"literal",value:"'added'"},{name:"literal",value:"'removed'"},{name:"literal",value:"'modified'"},{name:"literal",value:"'unchanged'"},{name:"literal",value:"'moved'"}],required:!1}},{key:"previousValue",value:{name:"T",required:!1}},{key:"previousIndex",value:{name:"number",required:!1}},{key:"currentIndex",value:{name:"number",required:!1}},{key:"fields",value:{name:"Record",elements:[{name:"string"},{name:"DiffMetadata"}],raw:"Record<string, DiffMetadata>",required:!1}}]},required:!1}}]}}],raw:"ExpressionEntry[]"},name:"value"}],return:{name:"void"}}},description:""}}};export{ee as E};
