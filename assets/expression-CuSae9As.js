import{j as s}from"./index-CQHSiloJ.js";import{a as K,b as y,p as x,d as _,S as U,f as I,u as G,g as Q,D as X,h as Y,i as Z,j as ee,R as re,H as se,k as te}from"./confirm-action-BDV7uGEX.js";import{r as u,R as h}from"./index-DQDNmYQF.js";import{z as k,N as j,T as b,i as M,V as ne,f as S}from"./wasm-x_N3mga8.js";import{c as ae,b as V,a as ie}from"./ce-preview-CycYJSbp.js";import{D as oe,B as le}from"./AntdIcon-D6ykz6_U.js";/**
 * @license lucide-react v0.488.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const de=[["circle",{cx:"9",cy:"12",r:"1",key:"1vctgf"}],["circle",{cx:"9",cy:"5",r:"1",key:"hp0tcf"}],["circle",{cx:"9",cy:"19",r:"1",key:"fkjjf6"}],["circle",{cx:"15",cy:"12",r:"1",key:"1tmaij"}],["circle",{cx:"15",cy:"5",r:"1",key:"19l28e"}],["circle",{cx:"15",cy:"19",r:"1",key:"f4zoj3"}]],ue=ae("grip-vertical",de),D=h.createContext({}),N=(e={})=>({id:crypto.randomUUID(),key:"",value:"",...e}),C=({children:e})=>{const t=u.useMemo(()=>K(i=>({disabled:!1,debugIndex:0,addRowAbove:(n=0)=>{i(x(r=>(r.expressions.splice(n,0,N()),r)))},addRowBelow:n=>{i(x(r=>(n=n??r.expressions.length-1,r.expressions.splice(n+1,0,N()),r)))},expressions:[],setExpressions:n=>{i({expressions:n})},swapRows:(n,r)=>{i(x(a=>{const[l]=a.expressions.splice(n,1);return a.expressions.splice(r,0,l),a}))},removeRow:n=>{i(x(r=>(r.expressions.splice(n,1),r)))},updateRow:(n,r)=>{i(x(a=>(a.expressions[n]={...a.expressions[n],...r},a)))}})),[]);return s.jsx(D.Provider,{value:t,children:e})};function v(e,t=y){return h.useContext(D)(e,t)}const q=()=>h.useContext(D);C.__docgenInfo={description:"",methods:[],displayName:"ExpressionStoreProvider"};const A=()=>{const e=q(),{debugIndex:t,traceCount:i}=e(({debug:r,debugIndex:a})=>({debugIndex:a,traceCount:k(r?.trace?.traceData).with(j.array(),l=>l.length).otherwise(()=>null)})),n=u.useMemo(()=>i?Array.from({length:i}).map((r,a)=>({label:String(a),value:a})):null,[t,i]);return n?s.jsxs(_,{horizontal:!0,horizontalAlign:"space-between",verticalAlign:"center",className:"grl-dt__command-bar",children:[s.jsx(_,{gap:8,horizontal:!0,className:"full-width"}),n&&s.jsxs(_,{horizontal:!0,verticalAlign:"center",horizontalAlign:"end",children:[s.jsx(b.Text,{style:{fontSize:12},children:"Simulation index:"}),s.jsx(U,{size:"small",style:{fontSize:12,minWidth:60},options:n,onChange:r=>e.setState({debugIndex:r}),value:n.some(r=>r.value===t)?t:0})]})]}):null};A.__docgenInfo={description:"",methods:[],displayName:"ExpressionCommandBar"};const ce=({value:e,onChange:t,defaultValue:i=[],disabled:n=!1,permission:r="edit:full"})=>{const a=u.useRef(!1),l=q(),{setExpressions:o,expressions:p}=v(({setExpressions:c,expressions:m})=>({setExpressions:c,expressions:m}));return u.useEffect(()=>{l.setState({disabled:n,permission:r})},[n,r]),u.useEffect(()=>{if(t)return l.subscribe((c,m)=>{y(c.expressions,m.expressions)||t?.(c.expressions)})},[l,t]),u.useEffect(()=>{a.current&&e&&!y(e,p)&&o(e)},[e]),u.useEffect(()=>{e?o(e):i&&o(i),a.current=!0},[]),null},B=(e,t)=>k(e).with(j.array(),i=>{const n=i,r=k(t).with(j.number.between(0,n.length-1),a=>a).otherwise(()=>0);return n[r]}).otherwise(i=>i),R=({index:e,children:t})=>{const{addRowAbove:i,addRowBelow:n,disabled:r}=v(({addRowBelow:a,addRowAbove:l,disabled:o})=>({addRowBelow:a,addRowAbove:l,disabled:o}));return s.jsx(oe,{destroyPopupOnHide:!0,transitionName:"",disabled:r,overlayStyle:{minWidth:200},trigger:["contextMenu"],menu:{items:[{key:"addRowAbove",label:s.jsx(I,{left:"Add row above"}),onClick:()=>{i(e)}},{key:"addRowBelow",label:s.jsx(I,{left:"Add row below"}),onClick:()=>{n(e)}}]},children:t})};R.__docgenInfo={description:"",methods:[],displayName:"ExpressionItemContextMenu",props:{index:{required:!0,tsType:{name:"number"},description:""},children:{required:!0,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""}}};const z=({expression:e,index:t,variableType:i})=>{const[n,r]=u.useState(!1),a=u.useRef(null),{updateRow:l,removeRow:o,swapRows:p,disabled:c,permission:m}=v(({updateRow:d,removeRow:f,swapRows:w,disabled:H,permission:J})=>({updateRow:d,removeRow:f,swapRows:w,disabled:H,permission:J})),g=d=>{l(t,d)},O=()=>{o(t)},[{isDropping:E,direction:T},P]=G({accept:"row",collect:d=>({isDropping:d.isOver({shallow:!0}),direction:(d.getDifferenceFromInitialOffset()?.y||0)>0?"down":"up"}),drop:d=>{p(d.index,t)}}),[{isDragging:L},W,F]=Q({canDrag:m==="edit:full"&&!c,item:()=>({...e,index:t}),type:"row",collect:d=>({isDragging:d.isDragging()})});return F(P(a)),s.jsxs("div",{ref:a,className:V("expression-list-item","expression-list__item",E&&T==="down"&&"dropping-down",E&&T==="up"&&"dropping-up",e?._diff?.status&&`expression-list__item--${e?._diff?.status}`),style:{opacity:L?.5:1},children:[s.jsx("div",{ref:W,className:"expression-list-item__drag","aria-disabled":m!=="edit:full"||c,children:s.jsx("div",{className:"expression-list-item__drag__inner",children:e?._diff?.status?s.jsx(X,{status:e?._diff?.status,style:{fontSize:16}}):s.jsx(ue,{size:10})})}),s.jsx("div",{className:"expression-list-item__key",onClick:d=>{if(d.target instanceof HTMLTextAreaElement)return;const f=d.currentTarget.querySelector("textarea");if(!f)return;f.focus();const w=f.value.length;f.setSelectionRange(w,w)},children:s.jsx(R,{index:t,children:s.jsx(Y,{noStyle:!0,placeholder:"Key",maxRows:10,readOnly:m!=="edit:full"||c,displayDiff:e?._diff?.fields?.key?.status==="modified",previousValue:e?._diff?.fields?.key?.previousValue,value:e?.key,onChange:d=>g({key:d.target.value}),autoComplete:"off"})})}),s.jsx("div",{className:"expression-list-item__code",children:s.jsx(R,{index:t,children:s.jsxs("div",{children:[s.jsx(Z,{className:"expression-list-item__value",placeholder:"Expression",maxRows:9,disabled:c,value:e?.value,displayDiff:e?._diff?.fields?.value?.status==="modified",previousValue:e?._diff?.fields?.value?.previousValue,onChange:d=>g({value:d}),variableType:i,onFocus:()=>r(!0),onBlur:()=>r(!1),noStyle:!0}),s.jsx(me,{expression:e})]})})}),s.jsxs("div",{className:"expression-list-item__action",children:[s.jsx(ee,{iconOnly:!0,disabled:m!=="edit:full"||c,onConfirm:O}),n&&s.jsx(pe,{id:e.id,value:e.value})]})]})},pe=h.memo(({id:e,value:t})=>{const{inputData:i,initial:n}=v(({debug:r,debugIndex:a,calculatedInputData:l})=>{const o=(r?.snapshot?.expressions??[]).find(c=>c.id===e),p=o?.key?B(r?.trace.traceData,a)?.[o.key]:void 0;return{inputData:l,initial:o&&p?{expression:o.value,result:fe(p.result)}:void 0}});return s.jsx("div",{className:"expression-list-item__livePreview",children:s.jsx(ie,{expression:t,inputData:i,initial:n})})}),me=({expression:e})=>{const{trace:t}=v(({debug:i,debugIndex:n})=>({trace:B(i?.trace?.traceData,n)?.[e.key]?.result}));return t?s.jsx("div",{className:"expression-list-item__resultOverlay",children:s.jsxs(b.Text,{ellipsis:{tooltip:t},style:{maxWidth:60,overflow:"hidden"},children:["= ",t]})}):null},fe=e=>{try{return JSON.parse(e)}catch(t){return t.toString()}};z.__docgenInfo={description:"",methods:[],displayName:"ExpressionItem",props:{expression:{required:!0,tsType:{name:"signature",type:"object",raw:`{
  id: string;
  key: string;
  value: string;
  _diff?: DiffMetadata;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"key",value:{name:"string",required:!0}},{key:"value",value:{name:"string",required:!0}},{key:"_diff",value:{name:"signature",type:"object",raw:`{
  status?: DiffStatus;
  previousValue?: T;
  previousIndex?: number;
  currentIndex?: number;
  fields?: Record<string, DiffMetadata>;
}`,signature:{properties:[{key:"status",value:{name:"union",raw:"'added' | 'removed' | 'modified' | 'unchanged' | 'moved'",elements:[{name:"literal",value:"'added'"},{name:"literal",value:"'removed'"},{name:"literal",value:"'modified'"},{name:"literal",value:"'unchanged'"},{name:"literal",value:"'moved'"}],required:!1}},{key:"previousValue",value:{name:"T",required:!1}},{key:"previousIndex",value:{name:"number",required:!1}},{key:"currentIndex",value:{name:"number",required:!1}},{key:"fields",value:{name:"Record",elements:[{name:"string"},{name:"DiffMetadata"}],raw:"Record<string, DiffMetadata>",required:!1}}]},required:!1}}]}},description:""},index:{required:!0,tsType:{name:"number"},description:""},variableType:{required:!1,tsType:{name:"VariableType"},description:""}}};const $=({})=>{const{expressions:e,addRowBelow:t,permission:i,disabled:n,inputVariableType:r}=v(({expressions:o,addRowBelow:p,permission:c,disabled:m,inputVariableType:g})=>({expressions:o,addRowBelow:p,permission:c,disabled:m,inputVariableType:g}),y),[a,l]=u.useState();return u.useEffect(()=>{if(!M()||!r)return;const o=r.clone();e.filter(p=>p.key.length>0).forEach(p=>{const c=o.calculateType(p.value);o.set(`$.${p.key}`,c)}),l(o)},[e,r]),s.jsxs(s.Fragment,{children:[s.jsxs("div",{className:"expression-list",children:[s.jsxs("div",{className:V("expression-list__item","expression-list__item--heading"),children:[s.jsx("div",{className:"expression-list__item__th expression-list__item__th--order"}),s.jsx(b.Text,{type:"secondary",className:"expression-list__item__th expression-list__item__th--key",children:"Key"}),s.jsx(b.Text,{type:"secondary",className:"expression-list__item__th",children:"Expression"}),s.jsx("div",{})]}),(e||[]).map((o,p)=>s.jsx(z,{expression:o,index:p,variableType:a},o.id))]}),i==="edit:full"&&!n&&s.jsx("div",{className:"expression-list__button-wrapper",children:s.jsx(le,{className:"expression-list__button",icon:s.jsx(re,{}),type:"link",onClick:()=>t(),children:"Add row"})})]})};$.__docgenInfo={description:"",methods:[],displayName:"ExpressionList"};const ve=({manager:e,debug:t,hideCommandBar:i,...n})=>{const[r,a]=u.useState(!1),l=u.useRef(null);u.useEffect(()=>{a(!0)},[]);const o=u.useMemo(()=>e?{manager:e}:{backend:se,options:{rootElement:l.current}},[l.current,e]);return s.jsx("div",{ref:l,children:l.current&&s.jsx(te,{...o,children:s.jsxs(C,{children:[s.jsx(ce,{...n}),!i&&s.jsx(A,{}),s.jsx($,{}),s.jsx(xe,{debug:t})]})})})},xe=({debug:e})=>{const t=q();return u.useEffect(()=>{const i=t.getState();y(i.debug,e)||t.setState({debug:e})},[e]),u.useEffect(()=>{if(!M())return;const i=r=>r.debug?.snapshot.executionMode==="loop",n=r=>{const a=r.debug?.inputData;if(!a)return;const l=new ne(a.data);if(i(r)){let o=l.get(r.debugIndex).cloneWith("$nodes",a.$nodes);a.$&&(o=o.cloneWith("$",a.$)),t.setState({calculatedInputData:o,inputVariableType:S.fromVariable(o)})}else{let o=l.cloneWith("$nodes",a.$nodes);a.$&&(o=o.cloneWith("$",a.$)),t.setState({calculatedInputData:o,inputVariableType:S.fromVariable(o)})}};return n(t.getState()),t.subscribe((r,a)=>{r.debugIndex===a.debugIndex&&r.debug===a.debug||n(r)})},[]),null};ve.__docgenInfo={description:"",methods:[],displayName:"Expression",props:{manager:{required:!1,tsType:{name:"DragDropManager"},description:""},debug:{required:!1,tsType:{name:"signature",raw:"ExpressionStore['debug']"},description:""},hideCommandBar:{required:!1,tsType:{name:"boolean"},description:""},disabled:{required:!1,tsType:{name:"boolean"},description:""},defaultValue:{required:!1,tsType:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  id: string;
  key: string;
  value: string;
  _diff?: DiffMetadata;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"key",value:{name:"string",required:!0}},{key:"value",value:{name:"string",required:!0}},{key:"_diff",value:{name:"signature",type:"object",raw:`{
  status?: DiffStatus;
  previousValue?: T;
  previousIndex?: number;
  currentIndex?: number;
  fields?: Record<string, DiffMetadata>;
}`,signature:{properties:[{key:"status",value:{name:"union",raw:"'added' | 'removed' | 'modified' | 'unchanged' | 'moved'",elements:[{name:"literal",value:"'added'"},{name:"literal",value:"'removed'"},{name:"literal",value:"'modified'"},{name:"literal",value:"'unchanged'"},{name:"literal",value:"'moved'"}],required:!1}},{key:"previousValue",value:{name:"T",required:!1}},{key:"previousIndex",value:{name:"number",required:!1}},{key:"currentIndex",value:{name:"number",required:!1}},{key:"fields",value:{name:"Record",elements:[{name:"string"},{name:"DiffMetadata"}],raw:"Record<string, DiffMetadata>",required:!1}}]},required:!1}}]}}],raw:"ExpressionEntry[]"},description:""},permission:{required:!1,tsType:{name:"union",raw:"ExpressionStore['permission']"},description:""},value:{required:!1,tsType:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  id: string;
  key: string;
  value: string;
  _diff?: DiffMetadata;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"key",value:{name:"string",required:!0}},{key:"value",value:{name:"string",required:!0}},{key:"_diff",value:{name:"signature",type:"object",raw:`{
  status?: DiffStatus;
  previousValue?: T;
  previousIndex?: number;
  currentIndex?: number;
  fields?: Record<string, DiffMetadata>;
}`,signature:{properties:[{key:"status",value:{name:"union",raw:"'added' | 'removed' | 'modified' | 'unchanged' | 'moved'",elements:[{name:"literal",value:"'added'"},{name:"literal",value:"'removed'"},{name:"literal",value:"'modified'"},{name:"literal",value:"'unchanged'"},{name:"literal",value:"'moved'"}],required:!1}},{key:"previousValue",value:{name:"T",required:!1}},{key:"previousIndex",value:{name:"number",required:!1}},{key:"currentIndex",value:{name:"number",required:!1}},{key:"fields",value:{name:"Record",elements:[{name:"string"},{name:"DiffMetadata"}],raw:"Record<string, DiffMetadata>",required:!1}}]},required:!1}}]}}],raw:"ExpressionEntry[]"},description:""},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(value: ExpressionEntry[]) => void",signature:{arguments:[{type:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  id: string;
  key: string;
  value: string;
  _diff?: DiffMetadata;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"key",value:{name:"string",required:!0}},{key:"value",value:{name:"string",required:!0}},{key:"_diff",value:{name:"signature",type:"object",raw:`{
  status?: DiffStatus;
  previousValue?: T;
  previousIndex?: number;
  currentIndex?: number;
  fields?: Record<string, DiffMetadata>;
}`,signature:{properties:[{key:"status",value:{name:"union",raw:"'added' | 'removed' | 'modified' | 'unchanged' | 'moved'",elements:[{name:"literal",value:"'added'"},{name:"literal",value:"'removed'"},{name:"literal",value:"'modified'"},{name:"literal",value:"'unchanged'"},{name:"literal",value:"'moved'"}],required:!1}},{key:"previousValue",value:{name:"T",required:!1}},{key:"previousIndex",value:{name:"number",required:!1}},{key:"currentIndex",value:{name:"number",required:!1}},{key:"fields",value:{name:"Record",elements:[{name:"string"},{name:"DiffMetadata"}],raw:"Record<string, DiffMetadata>",required:!1}}]},required:!1}}]}}],raw:"ExpressionEntry[]"},name:"value"}],return:{name:"void"}}},description:""}}};export{ve as E};
